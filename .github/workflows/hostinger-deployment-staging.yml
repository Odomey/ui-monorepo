name: Hostinger Deployment Staging

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: hemilabs/actions/setup-node-env@main
      # Migrations must be manually run before deploying the portal
      - name: Run migrations
        run: npx lerna run deploy --scope=migrations-pg --since=${{ github.event.before }}
        env:
          DEPLOY_POSTGRES_CONNECTION_DATABASE: ${{ secrets.POSTGRES_CONNECTION_DATABASE }}
          DEPLOY_POSTGRES_CONNECTION_HOST: ${{ secrets.POSTGRES_CONNECTION_HOST }}
          DEPLOY_POSTGRES_CONNECTION_PASSWORD: ${{ secrets.POSTGRES_CONNECTION_PASSWORD }}
          DEPLOY_POSTGRES_CONNECTION_USER: ${{ secrets.POSTGRES_CONNECTION_USER }}
      - name: Deploy claim-tokens microservice
        run: npx lerna run deploy --scope=claim-tokens --since=${{ github.event.before }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CLAIM_WELCOME_PACK_ZAPIER_WEBHOOK_URL: ${{ secrets.CLAIM_WELCOME_PACK_ZAPIER_WEBHOOK_URL }}
          DEPLOY_POSTGRES_CONNECTION_DATABASE: ${{ secrets.POSTGRES_CONNECTION_DATABASE }}
          DEPLOY_POSTGRES_CONNECTION_HOST: ${{ secrets.POSTGRES_CONNECTION_HOST }}
          DEPLOY_POSTGRES_CONNECTION_PASSWORD: ${{ secrets.POSTGRES_CONNECTION_PASSWORD }}
          DEPLOY_POSTGRES_CONNECTION_USER: ${{ secrets.POSTGRES_CONNECTION_USER }}
          ENABLE_DUPLICATED_EMAIL_CHECK: false
          ENABLE_IP_CHECK: false
          HASH_SECRET_KEY: ${{ secrets.HASH_SECRET_KEY }}
          IP_QUALITY_SCORE_SECRET_KEY: ${{ secrets.IP_QUALITY_SCORE_SECRET_KEY }}
          PORTAL_DOMAIN_URL: https://app.${{ vars.HEMI_DOMAIN_STAGING }}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
          STAGE: staging
      - name: Deploy portal
        uses: ./.github/actions/deploy-portal
        with:
          # hostinger env variables
          HOSTINGER_HOST: ${{ secrets.HOSTINGER_HOST }}
          HOSTINGER_PORT: ${{ secrets.HOSTINGER_PORT }}
          HOSTINGER_SSH_KEY: ${{ secrets.HOSTINGER_SSH_KEY }}
          HOSTINGER_TARGET: domains/${{ vars.HEMI_DOMAIN_STAGING }}/public_html/app
          HOSTINGER_USER: ${{ secrets.HOSTINGER_USER }}
          # next env variables to build the portal
          NEXT_PUBLIC_CLAIM_TOKENS_URL: https://vj7c4dltid.execute-api.eu-central-1.amazonaws.com/staging
          NEXT_PUBLIC_CUSTOM_RPC_URL_HEMI_MAINNET: $ {{ vars.NEXT_PUBLIC_CUSTOM_RPC_URL_HEMI_MAINNET_STAGING }}
          NEXT_PUBLIC_CUSTOM_RPC_URL_HEMI_SEPOLIA: ${{ vars.NEXT_PUBLIC_CUSTOM_RPC_URL_HEMI_SEPOLIA_STAGING }}
          NEXT_PUBLIC_CUSTOM_RPC_URL_MAINNET: ${{ vars.NEXT_PUBLIC_CUSTOM_RPC_URL_MAINNET_STAGING }}
          NEXT_PUBLIC_CUSTOM_RPC_URL_SEPOLIA: ${{ vars.NEXT_PUBLIC_CUSTOM_RPC_URL_SEPOLIA_STAGING }}
          NEXT_PUBLIC_ENABLE_ANALYTICS: false
          NEXT_PUBLIC_FEATURE_FLAG_ENABLE_BTC_TUNNEL: false
          NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
